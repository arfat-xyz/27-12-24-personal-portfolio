{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Console Log": {
    "prefix": "clg",
    "body": [
      "console.log(${1:object});"
    ],
    "description": "Generates a console.log statement with an editable placeholder for the object to be logged."
  },
  "Console Error": {
    "prefix": "cle",
    "body": [
      "console.error({${1:error}});"
    ],
    "description": "Generates a console.error statement with an editable placeholder for the error object to be logged."
  },
  "Format Error Response": {
    "prefix": "fer",
    "body": [
      "return formatErrorRespons${1:e}(\"${2:text}\", ${3:404});"
    ],
    "description": "Creates a return statement for a formatted error response. Includes placeholders for the error message (text) and the HTTP status code."
  },
  "Format Response": {
    "prefix": "fr",
    "body": [
      "return formatRespons${1:e}(${2:data}, \"${3:Operation completed successfully}\", ${4:200});"
    ],
    "description": "Creates a return statement for a generic formatted response. Includes placeholders for data (e.g., updatedDate), a success message, and an HTTP status code."
  },
  "Catch Error Handling": {
    "prefix": "reh",
    "body": [
      "console.error({${1:error}});",
      "return routeErrorHandle${2:r}(${3:error});"
    ],
    "description": "Generates a catch block or error-handling code snippet. Includes a console.error statement for logging the error and a return statement to handle errors using a routeErrorHandle function, both with editable placeholders."
  },
  "Frontend Success Response": {
    "prefix": "frsr",
    "body": [
      " frontendSuccessRespons${1:e}({message: ${2:res?.data?.message},});"
    ],
    "description": "Creates a success response for frontend operations. Includes placeholders for the return keyword, the response handler name, and the success message."
  },
  "Frontend Error Response": {
    "prefix": "frer",
    "body": [
      " frontendErrorRespons${1:e}({message: ${2:e?.response?.data?.message},});"
    ],
    "description": "Creates an error response for frontend operations. Includes placeholders for the return keyword, the response handler name, and the error message."
  },
  "String Validation": {
    "prefix": "sv",
    "body": [
      "stringValidatio${1:n}('${2:value}')"
    ],
    "description": "Validate string"
  }
}